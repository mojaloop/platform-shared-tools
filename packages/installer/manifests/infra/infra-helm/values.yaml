# Declare global configurations
global:
  kibanaEnabled: true

############### Kafka and Zookeeper ####################
## Reference: https://github.com/bitnami/charts/tree/main/bitnami/kafka/#installing-the-chart
kafka:
  enabled: true
  fullnameOverride: kafka

  persistence:
    enabled: true

  auth:
    clientProtocol: PLAINTEXT
    interBrokerProtocol: PLAINTEXT

  listeners:
    client:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    interbroker:
      protocol: PLAINTEXT
    external:
      protocol: PLAINTEXT

  kraft:
    enabled: false

  broker:
    replicaCount: 3
    persistence:
      enabled: true 
    # nodeSelector: 
    #   role: infra

  controller:
    replicaCount: 0
    # nodeSelector: 
    #   role: infra

  ## https://github.com/bitnami/charts/tree/main/bitnami/kafka/#installing-the-chart
  zookeeper:
    enabled: true
    fullnameOverride: zookeeper

    persistence:
      enabled: true

  ## Kafka provisioning
  provisioning:
    enabled: true
    topics:
      -   name: KAFKA_AUDITS_TOPIC
          value: audits
      -   name: KAFKA_LOGS_TOPIC
          value: logs
      -   name: AccountLookupBcRequests
          value: AccountLookupBcRequests
      -   name: AccountLookupBcEvents
          value: AccountLookupBcEvents
      -   name: AccountLookupBcResponses
          value: AccountLookupBcResponses
      -   name: AccountLookupBcErrors
          value: AccountLookupBcErrors
      -   name: OperatorBcErrors
          value: OperatorBcErrors
      -   name: QuotingBcErrors
          value: QuotingBcErrors
      -   name: QuotingBcEvents
          value: QuotingBcEvents
      -   name: QuotingBcRequests
          value: QuotingBcRequests
      -   name: SettlementsBcRequests
          value: SettlementsBcRequests
      -   name: TransfersBcErrors
          value: TransfersBcErrors
      -   name: TransfersBcEvents
          value: TransfersBcEvents
      -   name: TransfersBcRequests
          value: TransfersBcRequests
      -   name: TransfersBcTimeouts
          value: TransfersBcTimeouts
      -   name: SettlementsBcEvents
          value: SettlementsBcEvents
      -   name: SettlementsBcCommands
          value: SettlementsBcCommands
      -   name: PlatformConfigurationBcEvents
          value: PlatformConfigurationBcEvents
      -   name: ParticipantsBcEvents  
          value: ParticipantsBcEvents
      -   name: SchedulingBcCommands
          value: SchedulingBcCommands
      -   name: SchedulingBcEvents
          value: SchedulingBcEvents
      -   name: SecurityBcAuthorizationEvents
          value: SecurityBcAuthorizationEvents
          
    # nodeSelector: {}

############### RedPanda Console for Kafka  ####################
# https://artifacthub.io/packages/helm/redpanda-data/console?modal=values
# redpanda kakfa console config
redpanda-console:
  enabled: true
  fullnameOverride: rpconsole

  console:
    config:
      kafka:
        brokers:
          -   kafka:9092

  ingress:
    enabled: true
    className: nginx-ext
    hosts:
      -   host: kafkaconsole.local
          paths:
            -   path: /
                pathType: ImplementationSpecific

    #annotations 
      #external-dns.alpha.kubernetes.io/hostname: greenbank.vnext.mojaloop.live
      #cert-manager.io/issuer: letsencrypt-staging
    #tls: [] 
      #  - secretName: quickstart-example-tls
      #    hosts:
      #      - kafkaconsole.local

############### MongoDB  ####################
# X64 only => https://github.com/bitnami/charts/tree/main/bitnami/mongodb
# testing for ARM64 : https://artifacthub.io/packages/helm/groundhog2k/mongodb/0.1.0
mongodb:
  enabled: true
  persistence:
    enabled: true
  image:
    tag: 7.0

  fullnameOverride: mongodb
  settings:
    rootUsername: root
    rootPassword: mongoDbPas42
  
  # nodeSelector: 
  #   role: infra

############### Mongo Express ####################
# mongo express config
# https://artifacthub.io/packages/helm/cowboysysop/mongo-express
mongo-express:
  fullnameOverride: mongo-express
  enabled: true

  image:
    tag: 1.0.0

  ingress:
    enabled: true
    ingressClassName: nginx-ext
    hosts:
      - host: mongoexpress.local
        paths:
          - /
    #annotations
      #external-dns.alpha.kubernetes.io/hostname: mongoexpress.local
      #cert-manager.io/issuer: letsencrypt-staging
    #tls: [] 
      #  - secretName: quickstart-example-tls
      #    hosts:
      #      - mongoexpress.local

  mongodbEnableAdmin: true
  mongodbAdminPassword: mongoDbPas42
  mongodbAdminUsername: root

  livenessProbe:
    enabled: false
  readinessProbe:
    enabled: false
    
############### Redis  ####################
## Reference: https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml
redis:
  enabled: true
  fullnameOverride: redis
  architecture: standalone
  auth:
    enabled: false
  master:
    disableCommands: []
    persistence:
      enabled: true

############### Elasticsearch and Kibana  ####################
# https://github.com/bitnami/charts/tree/main/bitnami/elasticsearch/#installing-the-chart
elasticsearch:
  enabled: true
  #fullnameOverride: elastic 

  security:
    elasticPassword: elasticSearchPas42
    tls:
      restEncryption: false

  coordinating:
    replicaCount: 1

  master:
    masterOnly: false 
    replicaCount: 1
    persistence:
      enabled: true
  data:
    replicaCount: 0
  coordinating:
    replicaCount: 0
  ingest:
    replicaCount: 0

  ingress:
    ingressClassName: nginx-ext
    enabled: true
    hostname: elasticsearch.local
    #annotations 
      #external-dns.alpha.kubernetes.io/hostname: elasticsearch.local
      #cert-manager.io/issuer: letsencrypt-staging
    tls: 
      - enabled: false

  kibana:
    ingress:
      ingressClassName: nginx-ext
      enabled: true
      hostname: kibana.local
      #annotations 
        #external-dns.alpha.kubernetes.io/hostname: kibana.local
        #cert-manager.io/issuer: letsencrypt-staging
      tls: 
        enabled: false 